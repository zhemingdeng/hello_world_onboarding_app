buildscript {
    repositories {
    	jcenter()
    }

    dependencies {
    	classpath 'org.spockframework:spock-core:1.0-groovy-2.3'
    	classpath 'com.netflix.nebula:gradle-ospackage-plugin:2.0.2'
    	classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    	classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6'
    }
}

apply plugin: 'java'

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
}


apply plugin: "jacoco"
apply plugin: 'war'
apply plugin: 'nebula.rpm'

apply plugin: 'pmd'
apply plugin: "findbugs"
apply plugin: 'checkstyle'
apply plugin: "org.sonarqube"

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
    }
}

//testing git push hook 2

// JDK version source compatibility
sourceCompatibility = 1.8
// project version
version = '1.0.2'
// War file name
war.baseName = 'hello-world'
// Web directory, this overrides the default value "webapp"
// project.webAppDirName = 'WebContent'

// Set source directory
/*sourceSets {
        main {
            java {
                srcDir 'src'
            }
        }
    }*/

task app1Rpm(type: Rpm) {
    packageName 'hello-world'
    version '1.0.2'
    arch NOARCH
    os LINUX
    into ('/usr/share/tomcat/webapps/') {
//      into ('/var/lib/tomcat/webapps') {
        addParentDirs = false
    from (war.outputs.files) {
            addParentDirs = false
        }
    }
}

//UPLOAD ARCHIVES STUFF USE THIS OR MAVEN STUFF
artifacts {
    archives app1Rpm
}
//new comment
uploadArchives {
    repositories {
        maven {
          credentials {
                username "admin"
                password "admin123"
            }
          
            // change to point to your repo, e.g. http://my.org/repo
            url "http://ec2-54-210-118-101.compute-1.amazonaws.com:8081/nexus/content/repositories/snapshots"
      }
    }
}

pmd {
  ignoreFailures = true
  //sourceSets = ['src/main', 'src/test']
  reportsDir = file("$project.buildDir/reports/pmd")
  ruleSets = [
    "java-basic", 
    "java-braces",
    "java-comments"
  ]
}

sonarRunner {
    sonarProperties {
        property "sonar.host.url", "http://172.31.2.109:9000"
        property "sonar.username", "admin"
        property "sonar.password", "admin"
        //property "sonar.jdbc.url", "jdbc:mysql://172.31.2.109:3306/sonar?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true&useConfigs=maxPerformance"
        //property "sonar.jdbc.driverClassName", "com.mysql.jdbc.Driver"
        //property "sonar.jdbc.username", "sonarqube"
        //property "sonar.jdbc.password", "coveros1"
        property "sonar.java.source", "1.8"
        //property "sonar.java.binaries","target/classes"
		//property "sonar.java.libraries", "Java Resources/Libraries/JRE System Library/*.jar"
    }
}
